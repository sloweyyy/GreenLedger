# üå± GreenLedger Environment Configuration
# Copy this file to .env and update the values for your environment

# =============================================================================
# üåç ENVIRONMENT SETTINGS
# =============================================================================

# Environment type (development, staging, production)
ENVIRONMENT=development

# Application version (automatically set in CI/CD)
APP_VERSION=1.0.0

# Debug mode (true/false)
DEBUG=true

# Log level (debug, info, warn, error)
LOG_LEVEL=info

# =============================================================================
# üóÑÔ∏è DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Configuration for Calculator Service
CALCULATOR_DB_HOST=localhost
CALCULATOR_DB_PORT=5432
CALCULATOR_DB_NAME=calculator_db
CALCULATOR_DB_USER=postgres
CALCULATOR_DB_PASSWORD=password
CALCULATOR_DB_SSLMODE=disable
CALCULATOR_DB_MAX_CONNECTIONS=25
CALCULATOR_DB_MAX_IDLE_CONNECTIONS=5

# PostgreSQL Configuration for Tracker Service
TRACKER_DB_HOST=localhost
TRACKER_DB_PORT=5433
TRACKER_DB_NAME=tracker_db
TRACKER_DB_USER=postgres
TRACKER_DB_PASSWORD=password
TRACKER_DB_SSLMODE=disable
TRACKER_DB_MAX_CONNECTIONS=25
TRACKER_DB_MAX_IDLE_CONNECTIONS=5

# PostgreSQL Configuration for Wallet Service
WALLET_DB_HOST=localhost
WALLET_DB_PORT=5434
WALLET_DB_NAME=wallet_db
WALLET_DB_USER=postgres
WALLET_DB_PASSWORD=password
WALLET_DB_SSLMODE=disable
WALLET_DB_MAX_CONNECTIONS=25
WALLET_DB_MAX_IDLE_CONNECTIONS=5

# PostgreSQL Configuration for User Auth Service
USERAUTH_DB_HOST=localhost
USERAUTH_DB_PORT=5435
USERAUTH_DB_NAME=userauth_db
USERAUTH_DB_USER=postgres
USERAUTH_DB_PASSWORD=password
USERAUTH_DB_SSLMODE=disable
USERAUTH_DB_MAX_CONNECTIONS=25
USERAUTH_DB_MAX_IDLE_CONNECTIONS=5

# PostgreSQL Configuration for Reporting Service
REPORTING_DB_HOST=localhost
REPORTING_DB_PORT=5436
REPORTING_DB_NAME=reporting_db
REPORTING_DB_USER=postgres
REPORTING_DB_PASSWORD=password
REPORTING_DB_SSLMODE=disable
REPORTING_DB_MAX_CONNECTIONS=25
REPORTING_DB_MAX_IDLE_CONNECTIONS=5

# PostgreSQL Configuration for Certificate Service
CERTIFIER_DB_HOST=localhost
CERTIFIER_DB_PORT=5437
CERTIFIER_DB_NAME=certifier_db
CERTIFIER_DB_USER=postgres
CERTIFIER_DB_PASSWORD=password
CERTIFIER_DB_SSLMODE=disable
CERTIFIER_DB_MAX_CONNECTIONS=25
CERTIFIER_DB_MAX_IDLE_CONNECTIONS=5

# =============================================================================
# üíæ REDIS CONFIGURATION
# =============================================================================

# Redis Configuration
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_MAX_RETRIES=3
REDIS_POOL_SIZE=10
REDIS_MIN_IDLE_CONNECTIONS=5

# Redis TTL Settings (in seconds)
REDIS_DEFAULT_TTL=3600
REDIS_SESSION_TTL=86400
REDIS_CACHE_TTL=1800

# =============================================================================
# üì® MESSAGE QUEUE CONFIGURATION
# =============================================================================

# Kafka Configuration
KAFKA_BROKERS=localhost:9092
KAFKA_GROUP_ID=greenledger
KAFKA_AUTO_OFFSET_RESET=earliest
KAFKA_ENABLE_AUTO_COMMIT=true
KAFKA_SESSION_TIMEOUT=30000
KAFKA_HEARTBEAT_INTERVAL=3000

# Kafka Topics
KAFKA_TOPIC_CREDIT_EARNED=credit_earned
KAFKA_TOPIC_BALANCE_UPDATED=balance_updated
KAFKA_TOPIC_TRANSFER_COMPLETED=transfer_completed
KAFKA_TOPIC_CERTIFICATE_ISSUED=certificate_issued
KAFKA_TOPIC_ACTIVITY_LOGGED=activity_logged

# =============================================================================
# üåê SERVICE PORTS
# =============================================================================

# Calculator Service
CALCULATOR_HTTP_PORT=8081
CALCULATOR_GRPC_PORT=9081

# Tracker Service
TRACKER_HTTP_PORT=8082
TRACKER_GRPC_PORT=9082

# Wallet Service
WALLET_HTTP_PORT=8083
WALLET_GRPC_PORT=9083

# User Auth Service
USERAUTH_HTTP_PORT=8084
USERAUTH_GRPC_PORT=9084

# Reporting Service
REPORTING_HTTP_PORT=8085
REPORTING_GRPC_PORT=9085

# Certificate Service
CERTIFIER_HTTP_PORT=8086
CERTIFIER_GRPC_PORT=9086

# API Gateway
API_GATEWAY_PORT=8080

# =============================================================================
# üîê SECURITY CONFIGURATION
# =============================================================================

# JWT Configuration
JWT_SECRET=your-super-secret-jwt-key-change-in-production-min-32-chars
JWT_EXPIRATION_HOURS=24
JWT_REFRESH_EXPIRATION_HOURS=168
JWT_ISSUER=greenledger
JWT_AUDIENCE=greenledger-users

# Password Configuration
PASSWORD_MIN_LENGTH=8
PASSWORD_REQUIRE_UPPERCASE=true
PASSWORD_REQUIRE_LOWERCASE=true
PASSWORD_REQUIRE_NUMBERS=true
PASSWORD_REQUIRE_SYMBOLS=true
PASSWORD_BCRYPT_COST=12

# Rate Limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=60
RATE_LIMIT_BURST=10

# CORS Configuration
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=Content-Type,Authorization,X-Requested-With
CORS_ALLOW_CREDENTIALS=true

# =============================================================================
# üìä MONITORING & OBSERVABILITY
# =============================================================================

# Prometheus Configuration
PROMETHEUS_PORT=9090
PROMETHEUS_METRICS_PATH=/metrics
PROMETHEUS_SCRAPE_INTERVAL=15s

# Grafana Configuration
GRAFANA_PORT=3000
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=admin

# Health Check Configuration
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=5s
HEALTH_CHECK_RETRIES=3

# Tracing Configuration
JAEGER_ENDPOINT=http://localhost:14268/api/traces
JAEGER_SERVICE_NAME=greenledger
JAEGER_SAMPLER_TYPE=const
JAEGER_SAMPLER_PARAM=1

# =============================================================================
# üìß EMAIL CONFIGURATION
# =============================================================================

# SMTP Configuration
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password
SMTP_FROM_EMAIL=noreply@greenledger.com
SMTP_FROM_NAME=GreenLedger

# Email Templates
EMAIL_VERIFICATION_TEMPLATE=verification
EMAIL_PASSWORD_RESET_TEMPLATE=password_reset
EMAIL_WELCOME_TEMPLATE=welcome

# =============================================================================
# ‚òÅÔ∏è CLOUD PROVIDER CONFIGURATION
# =============================================================================

# AWS Configuration (if using AWS)
AWS_REGION=us-west-2
AWS_ACCESS_KEY_ID=your-access-key-id
AWS_SECRET_ACCESS_KEY=your-secret-access-key
AWS_S3_BUCKET=greenledger-storage
AWS_SES_REGION=us-west-2

# Google Cloud Configuration (if using GCP)
GOOGLE_CLOUD_PROJECT=your-project-id
GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json
GOOGLE_CLOUD_STORAGE_BUCKET=greenledger-storage

# Azure Configuration (if using Azure)
AZURE_STORAGE_ACCOUNT=your-storage-account
AZURE_STORAGE_KEY=your-storage-key
AZURE_STORAGE_CONTAINER=greenledger-storage

# =============================================================================
# üîó EXTERNAL SERVICES
# =============================================================================

# Carbon Footprint APIs
CARBON_INTERFACE_API_KEY=your-carbon-interface-api-key
CARBON_INTERFACE_BASE_URL=https://www.carboninterface.com/api/v1

# Blockchain Configuration (for certificates)
BLOCKCHAIN_NETWORK=ethereum
BLOCKCHAIN_RPC_URL=https://mainnet.infura.io/v3/your-project-id
BLOCKCHAIN_PRIVATE_KEY=your-private-key
BLOCKCHAIN_CONTRACT_ADDRESS=0x...

# Payment Gateway (if applicable)
STRIPE_SECRET_KEY=sk_test_...
STRIPE_PUBLISHABLE_KEY=pk_test_...
STRIPE_WEBHOOK_SECRET=whsec_...

# =============================================================================
# üß™ TESTING CONFIGURATION
# =============================================================================

# Test Database Configuration
TEST_DB_HOST=localhost
TEST_DB_PORT=5432
TEST_DB_NAME=greenledger_test
TEST_DB_USER=postgres
TEST_DB_PASSWORD=password

# Load Testing Configuration
LOAD_TEST_DURATION=2m
LOAD_TEST_CONCURRENT_USERS=50
LOAD_TEST_RAMP_UP_TIME=30s
LOAD_TEST_BASE_URL=http://localhost:8080

# =============================================================================
# üê≥ DOCKER CONFIGURATION
# =============================================================================

# Docker Compose Configuration
COMPOSE_PROJECT_NAME=greenledger
COMPOSE_FILE=docker-compose.yml

# Container Resource Limits
CONTAINER_MEMORY_LIMIT=512m
CONTAINER_CPU_LIMIT=0.5

# =============================================================================
# ‚ò∏Ô∏è KUBERNETES CONFIGURATION
# =============================================================================

# Kubernetes Namespace
K8S_NAMESPACE=greenledger

# Resource Requests and Limits
K8S_CPU_REQUEST=100m
K8S_CPU_LIMIT=500m
K8S_MEMORY_REQUEST=128Mi
K8S_MEMORY_LIMIT=512Mi

# Horizontal Pod Autoscaler
K8S_HPA_MIN_REPLICAS=2
K8S_HPA_MAX_REPLICAS=10
K8S_HPA_TARGET_CPU=70

# =============================================================================
# üìà BUSINESS CONFIGURATION
# =============================================================================

# Carbon Credit Configuration
DEFAULT_CREDIT_RATE=0.1
MINIMUM_TRANSFER_AMOUNT=1.0
MAXIMUM_TRANSFER_AMOUNT=10000.0
CREDIT_DECIMAL_PLACES=2

# Activity Configuration
ACTIVITY_VERIFICATION_REQUIRED=true
ACTIVITY_AUTO_APPROVE_THRESHOLD=10.0

# Certificate Configuration
CERTIFICATE_VALIDITY_DAYS=365
CERTIFICATE_AUTO_ISSUE=false

# =============================================================================
# üîß FEATURE FLAGS
# =============================================================================

# Feature Toggles
FEATURE_BLOCKCHAIN_CERTIFICATES=false
FEATURE_PAYMENT_PROCESSING=false
FEATURE_ADVANCED_ANALYTICS=true
FEATURE_MOBILE_API=true
FEATURE_WEBHOOK_NOTIFICATIONS=true

# =============================================================================
# üìù NOTES
# =============================================================================

# 1. Never commit this file with real credentials to version control
# 2. Use strong, unique passwords for production environments
# 3. Rotate secrets regularly
# 4. Use environment-specific configuration management tools in production
# 5. Consider using secret management services (AWS Secrets Manager, HashiCorp Vault, etc.)
# 6. Validate all environment variables on application startup
# 7. Use HTTPS in production environments
# 8. Enable proper logging and monitoring in production
