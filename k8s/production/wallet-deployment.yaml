apiVersion: apps/v1
kind: Deployment
metadata:
  name: wallet-service
  namespace: greenledger-production
  labels:
    app: greenledger
    service: wallet
    environment: production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: greenledger
      service: wallet
  template:
    metadata:
      labels:
        app: greenledger
        service: wallet
        environment: production
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8083"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: greenledger-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: wallet
        image: ghcr.io/sloweyyy/greenledger/wallet:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8083
          protocol: TCP
        - name: grpc
          containerPort: 9083
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        - name: HTTP_PORT
          value: "8083"
        - name: GRPC_PORT
          value: "9083"
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: greenledger-config
              key: wallet-db-host
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: greenledger-config
              key: wallet-db-port
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: greenledger-config
              key: wallet-db-name
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: greenledger-config
              key: wallet-db-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: wallet-db-password
        - name: DB_SSLMODE
          value: "require"
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: greenledger-config
              key: redis-host
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: greenledger-config
              key: redis-port
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: external-secrets
              key: redis-password
        - name: KAFKA_BROKERS
          valueFrom:
            configMapKeyRef:
              name: greenledger-config
              key: kafka-brokers
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: jwt-secret-key
        - name: BLOCKCHAIN_NETWORK
          value: "ethereum-sepolia"
        - name: BLOCKCHAIN_RPC_URL
          valueFrom:
            secretKeyRef:
              name: external-secrets
              key: blockchain-rpc-url
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: var-run
          mountPath: /var/run
      volumes:
      - name: tmp
        emptyDir: {}
      - name: var-run
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: wallet-hpa
  namespace: greenledger-production
  labels:
    app: greenledger
    service: wallet
    environment: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: wallet-service
  minReplicas: 2
  maxReplicas: 15
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max
