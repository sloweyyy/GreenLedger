# Service Account for PostgreSQL
apiVersion: v1
kind: ServiceAccount
metadata:
  name: postgres-service-account
  namespace: greenledger-staging
  labels:
    app: postgres
    environment: staging
automountServiceAccountToken: false
---
# Service Account for Redis
apiVersion: v1
kind: ServiceAccount
metadata:
  name: redis-service-account
  namespace: greenledger-staging
  labels:
    app: redis
    environment: staging
automountServiceAccountToken: false
---
# Service Account for Kafka
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kafka-service-account
  namespace: greenledger-staging
  labels:
    app: kafka
    environment: staging
automountServiceAccountToken: false
---
# Service Account for Zookeeper
apiVersion: v1
kind: ServiceAccount
metadata:
  name: zookeeper-service-account
  namespace: greenledger-staging
  labels:
    app: zookeeper
    environment: staging
automountServiceAccountToken: false
---
# PostgreSQL for Calculator Service
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: calculator-postgres-staging
  namespace: greenledger-staging
  labels:
    app: postgres
    service: calculator
    environment: staging
spec:
  serviceName: calculator-postgres-staging
  replicas: 1
  selector:
    matchLabels:
      app: postgres
      service: calculator
  template:
    metadata:
      labels:
        app: postgres
        service: calculator
        environment: staging
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
    spec:
      serviceAccountName: postgres-service-account
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 70
        runAsGroup: 70
        fsGroup: 70
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: postgres
        image: postgres:15.8-alpine
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: calculator-db-name
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: calculator-db-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: calculator-db-password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 70
          runAsGroup: 70
          capabilities:
            drop:
              - ALL
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: tmp-volume
          mountPath: /tmp
        - name: var-run-volume
          mountPath: /var/run/postgresql
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - exec pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h 127.0.0.1 -p 5432
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - exec pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h 127.0.0.1 -p 5432
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: var-run-volume
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: calculator-postgres-staging
  namespace: greenledger-staging
  labels:
    app: postgres
    service: calculator
    environment: staging
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: postgres
    service: calculator
---
# Redis for Caching
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-staging
  namespace: greenledger-staging
  labels:
    app: redis
    environment: staging
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        environment: staging
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
    spec:
      serviceAccountName: redis-service-account
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: redis
        image: redis:7.2-alpine
        command:
        - redis-server
        - --requirepass
        - $(REDIS_PASSWORD)
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: external-secrets
              key: redis-password
        ports:
        - containerPort: 6379
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 999
          runAsGroup: 999
          capabilities:
            drop:
              - ALL
          seccompProfile:
            type: RuntimeDefault
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: tmp-volume
          mountPath: /tmp
        livenessProbe:
          exec:
            command:
              - redis-cli
              - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
              - redis-cli
              - ping
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
      volumes:
      - name: redis-data
        emptyDir: {}
      - name: tmp-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: redis-staging
  namespace: greenledger-staging
  labels:
    app: redis
    environment: staging
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
---
# PostgreSQL for Tracker Service
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: tracker-postgres-staging
  namespace: greenledger-staging
  labels:
    app: postgres
    service: tracker
    environment: staging
spec:
  serviceName: tracker-postgres-staging
  replicas: 1
  selector:
    matchLabels:
      app: postgres
      service: tracker
  template:
    metadata:
      labels:
        app: postgres
        service: tracker
        environment: staging
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
    spec:
      serviceAccountName: postgres-service-account
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 70
        runAsGroup: 70
        fsGroup: 70
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: postgres
        image: postgres:15.8-alpine
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: tracker-db-name
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: tracker-db-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: tracker-db-password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 70
          runAsGroup: 70
          capabilities:
            drop:
              - ALL
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: tmp-volume
          mountPath: /tmp
        - name: var-run-volume
          mountPath: /var/run/postgresql
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - exec pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h 127.0.0.1 -p 5432
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - exec pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h 127.0.0.1 -p 5432
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: var-run-volume
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: tracker-postgres-staging
  namespace: greenledger-staging
  labels:
    app: postgres
    service: tracker
    environment: staging
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: postgres
    service: tracker
---
# PostgreSQL for Wallet Service
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: wallet-postgres-staging
  namespace: greenledger-staging
  labels:
    app: postgres
    service: wallet
    environment: staging
spec:
  serviceName: wallet-postgres-staging
  replicas: 1
  selector:
    matchLabels:
      app: postgres
      service: wallet
  template:
    metadata:
      labels:
        app: postgres
        service: wallet
        environment: staging
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
    spec:
      serviceAccountName: postgres-service-account
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 70
        runAsGroup: 70
        fsGroup: 70
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: postgres
        image: postgres:15.8-alpine
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: wallet-db-name
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: wallet-db-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: wallet-db-password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 70
          runAsGroup: 70
          capabilities:
            drop:
              - ALL
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: tmp-volume
          mountPath: /tmp
        - name: var-run-volume
          mountPath: /var/run/postgresql
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - exec pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h 127.0.0.1 -p 5432
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - exec pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h 127.0.0.1 -p 5432
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: var-run-volume
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: wallet-postgres-staging
  namespace: greenledger-staging
  labels:
    app: postgres
    service: wallet
    environment: staging
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: postgres
    service: wallet
